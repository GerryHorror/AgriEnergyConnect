@using AgriEnergyConnect.Models
@using AgriEnergyConnect.Models.ViewModels
@{
    ViewData["Title"] = "Messages";
    var inbox = ViewBag.InboxMessages as IEnumerable<Message>;
    var sent = ViewBag.SentMessages as IEnumerable<Message>;
    var users = ViewBag.Users as List<User>;
    var currentUserId = (int)ViewBag.CurrentUserId;
    Layout = User.IsInRole("Employee") ? "_EmployeeLayout" : "_FarmerLayout";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2 class="mb-0">Messages</h2>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#composeModal">
                    <i class="fa fa-edit me-2"></i> Compose
                </button>
            </div>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }
            <ul class="nav nav-tabs mb-3" id="messageTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="inbox-tab" data-bs-toggle="tab" data-bs-target="#inbox" type="button" role="tab" aria-controls="inbox" aria-selected="true">Inbox</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="sent-tab" data-bs-toggle="tab" data-bs-target="#sent" type="button" role="tab" aria-controls="sent" aria-selected="false">Sent</button>
                </li>
            </ul>
            <div class="tab-content" id="messageTabsContent">
                <div class="tab-pane fade show active" id="inbox" role="tabpanel" aria-labelledby="inbox-tab">
                    @if (inbox == null || !inbox.Any())
                    {
                        <div class="alert alert-info">You have no messages in your inbox.</div>
                    }
                    else
                    {
                        <div class="list-group">
                            @foreach (var message in inbox)
                            {
                                <a href="#" class="list-group-item list-group-item-action @(message.ReadDate == null ? "fw-bold" : "") message-link" data-message-id="@message.MessageId">
                                    <div class="d-flex w-100 justify-content-between">
                                        <div>
                                            <span class="me-2">@message.Subject</span>
                                            @if (message.ReadDate == null)
                                            {
                                                <span class="badge bg-success">Unread</span>
                                            }
                                        </div>
                                        <small class="text-muted">@message.SentDate.ToString("g")</small>
                                    </div>
                                    <div class="small text-muted">From: @message.Sender.FirstName @message.Sender.LastName</div>
                                    <div class="mt-1">@message.Content</div>
                                </a>
                            }
                        </div>
                    }
                </div>
                <div class="tab-pane fade" id="sent" role="tabpanel" aria-labelledby="sent-tab">
                    @if (sent == null || !sent.Any())
                    {
                        <div class="alert alert-info">You have not sent any messages.</div>
                    }
                    else
                    {
                        <div class="list-group">
                            @foreach (var message in sent)
                            {
                                <a href="#" class="list-group-item list-group-item-action message-link" data-message-id="@message.MessageId">
                                    <div class="d-flex w-100 justify-content-between">
                                        <span>@message.Subject</span>
                                        <small class="text-muted">@message.SentDate.ToString("g")</small>
                                    </div>
                                    <div class="small text-muted">To: @message.Recipient.FirstName @message.Recipient.LastName</div>
                                    <div class="mt-1">@message.Content</div>
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Compose Modal -->
<div class="modal fade" id="composeModal" tabindex="-1" aria-labelledby="composeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="composeModalLabel">Compose New Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="SendMessage" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="mb-3">
                        <label for="RecipientId" class="form-label">Recipient</label>
                        <select name="RecipientId" class="form-select" required>
                            <option value="">Select recipient...</option>
                            @foreach (var user in users)
                            {
                                <option value="@user.UserId">@user.FirstName @user.LastName (@user.Role)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="Subject" class="form-label">Subject</label>
                        <input name="Subject" class="form-control" maxlength="200" required />
                    </div>
                    <div class="mb-3">
                        <label for="Content" class="form-label">Message</label>
                        <textarea name="Content" class="form-control" rows="6" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-paper-plane me-2"></i> Send Message
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Message Details Modal -->
<div class="modal fade" id="messageDetailsModal" tabindex="-1" aria-labelledby="messageDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageDetailsModalLabel">Message Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="messageDetailsContent">
                    <!-- Message details will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="replyFromDetailsBtn" style="display:none;">
                    <i class="fa fa-reply me-2"></i> Reply
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $(document).ready(function() {
            // Pre-fill compose modal if replyTo and subject are in the query string
            const urlParams = new URLSearchParams(window.location.search);
            const replyTo = urlParams.get('replyTo');
            const subject = urlParams.get('subject');
            if (replyTo) {
                $('#composeModal').modal('show');
                $("select[name='RecipientId']").val(replyTo);
                if (subject) {
                    $("input[name='Subject']").val(subject);
                }
            }

            // Show message details in modal
            $('.message-link').on('click', function(e) {
                e.preventDefault();
                var messageId = $(this).data('message-id');
                var $row = $(this);
                $.get('@Url.Action("GetMessageDetails", "Message")', { id: messageId }, function(data) {
                    var html = `<div class='mb-2'><strong>Subject:</strong> ${data.subject}</div>
                        <div class='mb-2'><strong>From:</strong> ${data.senderName} <span class='badge ${data.senderRole === 'Employee' ? 'bg-primary' : 'bg-success'}'>${data.senderRole}</span></div>
                        <div class='mb-2'><strong>To:</strong> ${data.recipientName} <span class='badge ${data.recipientRole === 'Employee' ? 'bg-primary' : 'bg-success'}'>${data.recipientRole}</span></div>
                        <div class='mb-2'><strong>Date:</strong> ${new Date(data.sentDate).toLocaleString()}</div>
                        <hr/>
                        <div style='white-space: pre-line;'>${data.content}</div>`;
                    $('#messageDetailsContent').html(html);
                    // Show reply button only if the current user is the recipient
                    if (data.recipientId == @currentUserId && data.senderId != @currentUserId) {
                        $('#replyFromDetailsBtn').show().off('click').on('click', function() {
                            $('#messageDetailsModal').modal('hide');
                            setTimeout(function() {
                                $('#composeModal').modal('show');
                                $("select[name='RecipientId']").val(data.senderId);
                                $("input[name='Subject']").val('Re: ' + data.subject);
                            }, 400);
                        });
                    } else {
                        $('#replyFromDetailsBtn').hide();
                    }
                    $('#messageDetailsModal').modal('show');

                    // Mark as read if not already
                    if (data.recipientId == @currentUserId && data.readDate == null) {
                        $.post('@Url.Action("MarkAsRead", "Message")', { messageId: messageId, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() }, function() {
                            $row.removeClass('fw-bold');
                            $row.find('.badge.bg-success').remove();
                        });
                    }
                });
            });
        });
    </script>
}

<style>
    .nav-tabs .nav-link.active {
        background-color: #e8f5e9;
        color: #00897B;
        border-color: #00897B #00897B #fff;
    }

    .nav-tabs .nav-link {
        color: #00897B;
    }

    .list-group-item-action.fw-bold {
        font-weight: bold;
        background-color: #f0f8ff;
    }

    .btn-primary {
        background-color: #00897B;
        border-color: #00897B;
    }

        .btn-primary:hover {
            background-color: #00796B;
            border-color: #00796B;
        }

    .modal-header {
        background-color: #e8f5e9;
    }
</style> 