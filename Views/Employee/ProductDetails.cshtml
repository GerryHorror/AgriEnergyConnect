@model AgriEnergyConnect.DTOs.ProductDTO
@using AgriEnergyConnect.Helpers

@{
    ViewData["Title"] = "Product Details";
    Layout = "_EmployeeLayout";
    var farmer = ViewBag.Farmer as AgriEnergyConnect.Models.Farmer;
}

@section Styles {
    <link rel="stylesheet" href="~/css/employee-product.css" />
}

<div class="dashboard-content">
    <!-- Page Header -->
    <div class="page-header mb-4">
        <div class="title-section">
            <h1 class="employee-title">Product Details</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="@Url.Action("Dashboard")">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Products")">Products</a></li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("FarmerDetails", new { farmerId = Model.FarmerId })">
                            @Model.FarmName
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("ViewFarmerProducts", new { farmerId = Model.FarmerId })">
                            Products
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                </ol>
            </nav>
        </div>
        <a href="@Url.Action("ViewFarmerProducts", new { farmerId = Model.FarmerId })" class="btn btn-outline-secondary" data-bs-toggle="tooltip" title="Back to Products">
            <i class="fa fa-arrow-left me-2"></i> Back to Products
        </a>
    </div>

    @if (Model == null || ViewBag.Farmer == null)
    {
        <div class="alert alert-danger mt-4">Product or supplier information could not be found.</div>
    }
    else
    {
        <div class="row g-4 align-items-stretch">
            <!-- Product Details Card -->
            <div class="col-lg-8 col-12">
                <div class="card h-100 shadow-sm mb-4">
                    <div class="card-header bg-light border-bottom">
                        <h5 class="mb-0">Product Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row mb-4 g-3">
                            <div class="col-md-6">
                                <div class="product-detail-item mb-3">
                                    <span class="detail-label">Product Name</span>
                                    <span class="detail-value">@Model.Name</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="product-detail-item mb-3">
                                    <span class="detail-label">Category</span>
                                    <span class="detail-value">
                                        <span class="badge product-category-badge" style="background-color: @CategoryHelper.GetCategoryColor(Model.Category); color: #333;">
                                            @Model.Category
                                        </span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="row mb-4 g-3">
                            <div class="col-md-6">
                                <div class="product-detail-item mb-3">
                                    <span class="detail-label">Production Date</span>
                                    <span class="detail-value">@Model.ProductionDate.ToString("MMMM d, yyyy")</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="product-detail-item mb-3">
                                    <span class="detail-label">Added to System</span>
                                    <span class="detail-value">@Model.CreatedDate.ToString("MMMM d, yyyy")</span>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="row mb-4 g-3">
                            <div class="col-md-6">
                                <div class="product-detail-item mb-3">
                                    <span class="detail-label">Status</span>
                                    <span class="detail-value">
                                        @if (Model.IsActive)
                                        {
                                            <span class="badge bg-success"><i class="fa fa-check-circle me-1"></i> In Stock</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary"><i class="fa fa-times-circle me-1"></i> Out of Stock</span>
                                        }
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="product-detail-item mb-3">
                                    <span class="detail-label">Description</span>
                                    <span class="detail-value">
                                        @if (string.IsNullOrWhiteSpace(Model.Description))
                                        {
                                            <span class="text-muted">No description provided</span>
                                        }
                                        else
                                        {
                                            @Model.Description
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <!-- Production Timeline -->
                        <div class="production-timeline mt-4">
                            <h6 class="text-uppercase text-muted mb-3">Production Timeline</h6>
                            <div class="timeline">
                                <div class="timeline-item">
                                    <div class="timeline-marker bg-success"></div>
                                    <div class="timeline-content">
                                        <h6 class="timeline-title">Production Date</h6>
                                        <p class="timeline-text">@Model.ProductionDate.ToString("MMMM d, yyyy")</p>
                                    </div>
                                </div>
                                <div class="timeline-item">
                                    <div class="timeline-marker bg-info"></div>
                                    <div class="timeline-content">
                                        <h6 class="timeline-title">Added to System</h6>
                                        <p class="timeline-text">@Model.CreatedDate.ToString("MMMM d, yyyy")</p>
                                    </div>
                                </div>
                                <div class="timeline-item">
                                    <div class="timeline-marker @(Model.IsActive ? "bg-success" : "bg-secondary")"></div>
                                    <div class="timeline-content">
                                        <h6 class="timeline-title">Current Status</h6>
                                        <p class="timeline-text">@(Model.IsActive ? "In Stock" : "Out of Stock")</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Farmer Information -->
            <div class="col-lg-4 col-12">
                <div class="card mb-4 shadow-sm h-100 d-flex flex-column justify-content-between">
                    <div>
                        <div class="card-header bg-light border-bottom">
                            <h5 class="mb-0">Supplier Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="text-center mb-4">
                                <div class="farmer-avatar mx-auto mb-3"
                                     style="background-color: @GetAvatarColor(farmer.FarmerId); color: @GetAvatarTextColor(farmer.FarmerId); border-color: @GetAvatarBorderColor(farmer.FarmerId);">
                                    @(farmer.User != null
                                        ? GetInitials(farmer.User.FirstName, farmer.User.LastName, farmer.FarmName)
                                        : GetInitials(null, null, farmer.FarmName))
                                </div>
                                <h5 class="mb-1">@farmer.FarmName</h5>
                                <p class="text-muted mb-2">
                                    @farmer.User?.FirstName @farmer.User?.LastName
                                </p>
                                <div class="mb-3">
                                    @if (farmer.User == null)
                                    {
                                        <span class="badge bg-secondary">Unknown Status</span>
                                    }
                                    else if (farmer.User.IsActive)
                                    {
                                        <span class="badge bg-success">Active Farmer</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactive Farmer</span>
                                    }
                                </div>
                            </div>
                            <div class="farmer-contact-info mb-3">
                                <div class="contact-item">
                                    <i class="fa fa-map-marker-alt text-danger me-2"></i>
                                    <span>@farmer.Location</span>
                                </div>
                                @if (farmer.User != null)
                                {
                                    <div class="contact-item">
                                        <i class="fa fa-envelope text-primary me-2"></i>
                                        <a href="mailto:@farmer.User.Email">@farmer.User.Email</a>
                                    </div>
                                    <div class="contact-item">
                                        <i class="fa fa-phone text-success me-2"></i>
                                        <a href="tel:@farmer.User.PhoneNumber">@farmer.User.PhoneNumber</a>
                                    </div>
                                }
                            </div>
                            <div class="d-grid gap-2 mt-4">
                                <a href="@Url.Action("FarmerDetails", new { farmerId = farmer.FarmerId })" class="btn btn-outline-primary" data-bs-toggle="tooltip" title="View Farmer Details">
                                    <i class="fa fa-user me-2"></i> View Farmer
                                </a>
                                <a href="@Url.Action("ViewFarmerProducts", new { farmerId = farmer.FarmerId })" class="btn btn-outline-success" data-bs-toggle="tooltip" title="View All Products from this Farmer">
                                    <i class="fa fa-boxes me-2"></i> View All Products
                                </a>
                            </div>
                        </div>
                    </div>
                    <!-- Actions -->
                    <div class="card-footer bg-white border-top mt-auto">
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-outline-primary" onclick="window.print()">
                                <i class="fa fa-print me-2"></i> Print Product Details
                            </button>
                            <a href="mailto:@(farmer.User?.Email)?subject=Regarding Product: @Model.Name" class="btn btn-outline-secondary">
                                <i class="fa fa-envelope me-2"></i> Contact Farmer
                            </a>
                            @if (Model.IsActive)
                            {
                                <form asp-action="DeactivateProduct" asp-controller="Employee" asp-route-productId="@Model.ProductId"
                                      asp-route-returnUrl="@Context.Request.Path" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-danger"
                                            onclick="return confirm('Are you sure you want to mark this product as out of stock?');">
                                        <i class="fa fa-minus-circle me-2"></i> Mark as Out of Stock
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="ActivateProduct" asp-controller="Employee" asp-route-productId="@Model.ProductId"
                                      asp-route-returnUrl="@Context.Request.Path" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-success"
                                            onclick="return confirm('Are you sure you want to mark this product as in stock?');">
                                        <i class="fa fa-check-circle me-2"></i> Mark as In Stock
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Enable tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
}

@functions {
    private string GetAvatarColor(int id)
    {
        var colors = new[] { "#E8F5E9", "#FFF3E0", "#E1F5FE", "#F3E5F5", "#FCE4EC", "#E3F2FD" };
        return colors[id % colors.Length];
    }

    private string GetAvatarTextColor(int id)
    {
        var colors = new[] { "#4CAF50", "#FF9800", "#29B6F6", "#9C27B0", "#E91E63", "#2196F3" };
        return colors[id % colors.Length];
    }

    private string GetAvatarBorderColor(int id)
    {
        var colors = new[] { "#4CAF50", "#FF9800", "#29B6F6", "#9C27B0", "#E91E63", "#2196F3" };
        return colors[id % colors.Length];
    }

    private string GetInitials(string firstName, string lastName, string fallback = null)
    {
        firstName = firstName?.Trim();
        lastName = lastName?.Trim();
        if (!string.IsNullOrEmpty(firstName) || !string.IsNullOrEmpty(lastName))
        {
            var firstInitial = !string.IsNullOrEmpty(firstName) ? firstName[0].ToString() : "";
            var lastInitial = !string.IsNullOrEmpty(lastName) ? lastName[0].ToString() : "";
            return $"{firstInitial}{lastInitial}".ToUpper();
        }
        if (!string.IsNullOrWhiteSpace(fallback))
        {
            var parts = fallback.Trim().Split(' ', StringSplitOptions.RemoveEmptyEntries);
            if (parts.Length >= 2)
                return $"{parts[0][0]}{parts[1][0]}".ToUpper();
            else if (parts.Length == 1)
                return parts[0].Substring(0, Math.Min(2, parts[0].Length)).ToUpper();
        }
        return "??";
    }
}