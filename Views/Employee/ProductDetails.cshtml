@model AgriEnergyConnect.DTOs.ProductDTO

@{
    ViewData["Title"] = "Product Details";
    Layout = "_EmployeeLayout";
    var farmer = ViewBag.Farmer as AgriEnergyConnect.Models.Farmer;
}

@section Styles {
    <link rel="stylesheet" href="~/css/employee-product.css" />
}

<div class="dashboard-content">
    <!-- Page Header -->
    <div class="page-header">
        <div class="title-section">
            <h1>Product Details</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="@Url.Action("Dashboard")">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("ManageFarmers")">Manage Farmers</a></li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("FarmerDetails", new { farmerId = Model.FarmerId })">
                            @Model.FarmName
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("ViewFarmerProducts", new { farmerId = Model.FarmerId })">
                            Products
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                </ol>
            </nav>
        </div>
        <a href="@Url.Action("ViewFarmerProducts", new { farmerId = Model.FarmerId })" class="btn btn-outline-secondary">
            <i class="fa fa-arrow-left me-2"></i> Back to Products
        </a>
    </div>

    <div class="row">
        <!-- Product Details Card -->
        <div class="col-md-8">
            <div class="card h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Product Information</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="product-detail-item">
                                <span class="detail-label">Product Name</span>
                                <span class="detail-value">@Model.Name</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="product-detail-item">
                                <span class="detail-label">Category</span>
                                <span class="detail-value">
                                    <span class="badge product-category-badge @GetCategoryClass(Model.Category)">
                                        @Model.Category
                                    </span>
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="product-detail-item">
                                <span class="detail-label">Production Date</span>
                                <span class="detail-value">@Model.ProductionDate.ToString("MMMM d, yyyy")</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="product-detail-item">
                                <span class="detail-label">Added to System</span>
                                <span class="detail-value">@Model.CreatedDate.ToString("MMMM d, yyyy")</span>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="product-detail-item">
                                <span class="detail-label">Description</span>
                                <span class="detail-value">
                                    @if (string.IsNullOrWhiteSpace(Model.Description))
                                    {
                                        <span class="text-muted">No description provided</span>
                                    }
                                    else
                                    {
                                        @Model.Description
                                    }
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Production Timeline -->
                    <div class="production-timeline mt-5">
                        <h6 class="text-uppercase text-muted mb-3">Production Timeline</h6>
                        <div class="timeline">
                            <div class="timeline-item">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <h6 class="timeline-title">Production Date</h6>
                                    <p class="timeline-text">@Model.ProductionDate.ToString("MMMM d, yyyy")</p>
                                </div>
                            </div>
                            <div class="timeline-item">
                                <div class="timeline-marker bg-info"></div>
                                <div class="timeline-content">
                                    <h6 class="timeline-title">Added to System</h6>
                                    <p class="timeline-text">@Model.CreatedDate.ToString("MMMM d, yyyy")</p>
                                </div>
                            </div>
                            <div class="timeline-item">
                                <div class="timeline-marker bg-primary"></div>
                                <div class="timeline-content">
                                    <h6 class="timeline-title">Current Status</h6>
                                    <p class="timeline-text">Active in Inventory</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Farmer Information -->
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Supplier Information</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <div class="farmer-avatar mx-auto mb-3"
                             style="background-color: @GetAvatarColor(farmer.FarmerId);
                                    color: @GetAvatarTextColor(farmer.FarmerId);
                                    border-color: @GetAvatarBorderColor(farmer.FarmerId);">
                            @GetInitials(farmer.User?.FirstName, farmer.User?.LastName)
                        </div>
                        <h5 class="mb-1">@farmer.FarmName</h5>
                        <p class="text-muted mb-2">
                            @farmer.User?.FirstName @farmer.User?.LastName
                        </p>
                        <div class="mb-3">
                            @if (farmer.User?.IsActive ?? false)
                            {
                                <span class="badge bg-success">Active Farmer</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive Farmer</span>
                            }
                        </div>
                    </div>

                    <div class="farmer-contact-info">
                        <div class="contact-item">
                            <i class="fa fa-map-marker-alt text-danger me-2"></i>
                            <span>@farmer.Location</span>
                        </div>
                        @if (farmer.User != null)
                        {
                            <div class="contact-item">
                                <i class="fa fa-envelope text-primary me-2"></i>
                                <a href="mailto:@farmer.User.Email">@farmer.User.Email</a>
                            </div>
                            <div class="contact-item">
                                <i class="fa fa-phone text-success me-2"></i>
                                <a href="tel:@farmer.User.PhoneNumber">@farmer.User.PhoneNumber</a>
                            </div>
                        }
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        <a href="@Url.Action("FarmerDetails", new { farmerId = farmer.FarmerId })" class="btn btn-outline-primary">
                            <i class="fa fa-user me-2"></i> View Farmer Profile
                        </a>
                        <a href="@Url.Action("ViewFarmerProducts", new { farmerId = farmer.FarmerId })" class="btn btn-outline-success">
                            <i class="fa fa-box me-2"></i> View All Products
                        </a>
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary" onclick="window.print()">
                            <i class="fa fa-print me-2"></i> Print Product Details
                        </button>
                        <a href="mailto:@(farmer.User?.Email)?subject=Regarding Product: @Model.Name" class="btn btn-outline-secondary">
                            <i class="fa fa-envelope me-2"></i> Contact Farmer
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles -->
<style>
    .farmer-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        font-weight: bold;
        border: 2px solid;
    }

    .product-detail-item {
        margin-bottom: 15px;
    }

    .detail-label {
        display: block;
        color: #666;
        font-size: 12px;
        text-transform: uppercase;
        margin-bottom: 5px;
    }

    .detail-value {
        font-size: 16px;
        font-weight: 500;
    }

    .contact-item {
        display: flex;
        align-items: center;
        margin-bottom: 12px;
        font-size: 14px;
    }

        .contact-item a {
            text-decoration: none;
        }

    .product-category-badge {
        padding: 5px 10px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
    }

    .category-organic {
        background: #E8F5E9;
        color: #4CAF50;
    }

    .category-dairy {
        background: #FFF3E0;
        color: #FF9800;
    }

    .category-grains {
        background: #E1F5FE;
        color: #2196F3;
    }

    .category-vegetables {
        background: #F1F8E9;
        color: #8BC34A;
    }

    /* Timeline styles */
    .timeline {
        position: relative;
        padding-left: 30px;
    }

        .timeline::before {
            content: "";
            position: absolute;
            left: 9px;
            top: 10px;
            bottom: 10px;
            width: 2px;
            background: #eee;
        }

    .timeline-item {
        margin-bottom: 20px;
        position: relative;
    }

    .timeline-marker {
        position: absolute;
        left: -30px;
        top: 4px;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        z-index: 1;
    }

    .timeline-content {
        padding-bottom: 10px;
    }

    .timeline-title {
        font-size: 14px;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .timeline-text {
        font-size: 13px;
        color: #666;
        margin-bottom: 0;
    }

    /* Print styles */
    @@media print {
        .page-header, .btn, .card-header, .breadcrumb {
        display: none;
    }

    body {
        background-color: white;
    }

    .card {
        border: none;
        box-shadow: none;
    }

    .dashboard-content {
        padding: 0;
    }

    }
</style>

@functions {
    private string GetAvatarColor(int id)
    {
        var colors = new[] { "#E8F5E9", "#FFF3E0", "#E1F5FE", "#F3E5F5", "#FCE4EC", "#E3F2FD" };
        return colors[id % colors.Length];
    }

    private string GetAvatarTextColor(int id)
    {
        var colors = new[] { "#4CAF50", "#FF9800", "#29B6F6", "#9C27B0", "#E91E63", "#2196F3" };
        return colors[id % colors.Length];
    }

    private string GetAvatarBorderColor(int id)
    {
        var colors = new[] { "#4CAF50", "#FF9800", "#29B6F6", "#9C27B0", "#E91E63", "#2196F3" };
        return colors[id % colors.Length];
    }

    private string GetInitials(string firstName, string lastName)
    {
        if (string.IsNullOrEmpty(firstName) && string.IsNullOrEmpty(lastName)) return "??";

        var firstInitial = !string.IsNullOrEmpty(firstName) ? firstName[0].ToString() : "";
        var lastInitial = !string.IsNullOrEmpty(lastName) ? lastName[0].ToString() : "";

        return $"{firstInitial}{lastInitial}".ToUpper();
    }

    private string GetCategoryClass(string category)
    {
        return category?.ToLower() switch
        {
            "organic" => "category-organic",
            "dairy" => "category-dairy",
            "grains" => "category-grains",
            "vegetables" => "category-vegetables",
            _ => ""
        };
    }
}