@model IEnumerable<AgriEnergyConnect.DTOs.ProductDTO>
@using AgriEnergyConnect.Helpers

@{
    ViewData["Title"] = "All Products";
    Layout = "_EmployeeLayout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/employee-product.css" />
}

<div class="dashboard-content">
    <!-- Page Header -->
    <div class="page-header">
        <div class="title-section">
            <h1>All Products</h1>
            <p>View and manage all products across the platform</p>
        </div>
        <button type="button" onclick="window.print()" class="btn btn-outline-secondary">
            <i class="fa fa-print me-2"></i> Print List
        </button>
    </div>

    <!-- Filter Section -->
    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">Filter Products</h5>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3" id="filterForm">
                <!-- Search Term -->
                <div class="col-md-3">
                    <label for="searchTerm" class="form-label">Search</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fa fa-search"></i>
                        </span>
                        <input type="text" class="form-control" id="searchTerm" name="searchTerm"
                               placeholder="Search products..." value="@ViewBag.SearchTerm">
                    </div>
                </div>

                <!-- Category Filter -->
                <div class="col-md-2">
                    <label for="category" class="form-label">Category</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fa fa-tag"></i>
                        </span>
                        <select class="form-select" id="category" name="category">
                            <option value="">All Categories</option>
                            @foreach (var category in CategoryHelper.Categories)
                            {
                                <option value="@category.Name" selected="@(ViewBag.SelectedCategory == category.Name)">@category.Name</option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Status Filter -->
                <div class="col-md-2">
                    <label for="statusFilter" class="form-label">Status</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fa fa-toggle-on"></i>
                        </span>
                        <select class="form-select" id="statusFilter" name="statusFilter">
                            <option value="">All Products</option>
                            <option value="active" selected="@(ViewBag.SelectedStatus == "active")">In Stock</option>
                            <option value="inactive" selected="@(ViewBag.SelectedStatus == "inactive")">Out of Stock</option>
                        </select>
                    </div>
                </div>

                <!-- Farmer Filter -->
                <div class="col-md-3">
                    <label for="farmerFilter" class="form-label">Farmer</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fa fa-user"></i>
                        </span>
                        <select class="form-select" id="farmerFilter" name="farmerFilter">
                            <option value="">All Farmers</option>
                            @foreach (var farmer in ViewBag.Farmers ?? new List<AgriEnergyConnect.DTOs.FarmerSummaryDTO>())
                            {
                                <option value="@farmer.FarmerId" selected="@(ViewBag.SelectedFarmer == farmer.FarmerId.ToString())">
                                    @farmer.FarmName - @farmer.OwnerName
                                </option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Date Range -->
                <div class="col-md-2">
                    <label for="startDate" class="form-label">From Date</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fa fa-calendar"></i>
                        </span>
                        <input type="date" class="form-control" id="startDate" name="startDate"
                               value="@(ViewBag.StartDate?.ToString("yyyy-MM-dd"))">
                    </div>
                </div>

                <div class="col-md-2">
                    <label for="endDate" class="form-label">To Date</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fa fa-calendar-alt"></i>
                        </span>
                        <input type="date" class="form-control" id="endDate" name="endDate"
                               value="@(ViewBag.EndDate?.ToString("yyyy-MM-dd"))">
                    </div>
                </div>

                <div class="col-12 d-flex justify-content-end">
                    <a href="@Url.Action("Products", "Employee")" class="btn btn-outline-secondary me-2">
                        <i class="fa fa-times me-2"></i> Clear Filters
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-filter me-2"></i> Apply Filters
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Products Table -->
    <div class="card">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Products (@ViewBag.TotalProducts total)</h5>
            <div>
                <button type="button" id="exportBtn" class="btn btn-sm btn-outline-primary">
                    <i class="fa fa-file-export me-2"></i> Export to CSV
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="productsTable">
                        <thead class="table-light">
                            <tr>
                                <th>Product</th>
                                <th>Category</th>
                                <th>Farmer</th>
                                <th>Production Date</th>
                                <th>Status</th>
                                <th>Description</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model)
                            {
                                <tr class="@(!product.IsActive ? "table-secondary opacity-75" : "")">
                                    <td>
                                        <strong>@product.Name</strong>
                                    </td>
                                    <td>
                                        <span class="badge product-category-badge" style="background-color: @CategoryHelper.GetCategoryColor(product.Category); color: #333;">
                                            @product.Category
                                        </span>
                                    </td>
                                    <td>
                                        <div>
                                            <a href="@Url.Action("FarmerDetails", "Employee", new { farmerId = product.FarmerId })"
                                               class="d-block fw-bold">
                                                @product.FarmName
                                            </a>
                                            <small class="text-muted">@product.FarmerName</small>
                                        </div>
                                    </td>
                                    <td>@product.ProductionDate.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        @if (product.IsActive)
                                        {
                                            <span class="badge bg-success">In Stock</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Out of Stock</span>
                                        }
                                    </td>
                                    <td>@(string.IsNullOrEmpty(product.Description) ? "-" : product.Description)</td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("ProductDetails", "Employee", new { productId = product.ProductId })"
                                               class="btn btn-sm btn-outline-info" title="View Details">
                                                <i class="fa fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("ViewFarmerProducts", "Employee", new { farmerId = product.FarmerId })"
                                               class="btn btn-sm btn-outline-success" title="View All Products from this Farmer">
                                                <i class="fa fa-boxes"></i>
                                            </a>
                                            @if (product.IsActive)
                                            {
                                                <form asp-action="DeactivateProduct" asp-route-productId="@product.ProductId" asp-route-returnUrl="@Context.Request.Path@Context.Request.QueryString" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" title="Mark as Out of Stock"
                                                            onclick="return confirm('Are you sure you want to mark @product.Name as out of stock?');">
                                                        <i class="fa fa-minus-circle"></i>
                                                    </button>
                                                </form>
                                            }
                                            else
                                            {
                                                <form asp-action="ActivateProduct" asp-route-productId="@product.ProductId" asp-route-returnUrl="@Context.Request.Path@Context.Request.QueryString" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-sm btn-outline-success" title="Mark as In Stock"
                                                            onclick="return confirm('Are you sure you want to mark @product.Name as in stock?');">
                                                        <i class="fa fa-check-circle"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (ViewBag.TotalPages > 1)
                {
                    <nav aria-label="Page navigation" class="mt-3 pb-3 px-3">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Products", new { page = ViewBag.CurrentPage - 1, searchTerm = ViewBag.SearchTerm, category = ViewBag.SelectedCategory, statusFilter = ViewBag.SelectedStatus, farmerFilter = ViewBag.SelectedFarmer, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">
                                    Previous
                                </a>
                            </li>

                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Products", new { page = i, searchTerm = ViewBag.SearchTerm, category = ViewBag.SelectedCategory, statusFilter = ViewBag.SelectedStatus, farmerFilter = ViewBag.SelectedFarmer, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">
                                        @i
                                    </a>
                                </li>
                            }

                            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Products", new { page = ViewBag.CurrentPage + 1, searchTerm = ViewBag.SearchTerm, category = ViewBag.SelectedCategory, statusFilter = ViewBag.SelectedStatus, farmerFilter = ViewBag.SelectedFarmer, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">
                                    Next
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <div class="empty-state">
                        <i class="fa fa-box-open fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No products found</h5>
                        <p class="text-muted">
                            @if (!string.IsNullOrEmpty(ViewBag.SearchTerm) || !string.IsNullOrEmpty(ViewBag.SelectedCategory) || !string.IsNullOrEmpty(ViewBag.SelectedStatus) || !string.IsNullOrEmpty(ViewBag.SelectedFarmer) || ViewBag.StartDate != null || ViewBag.EndDate != null)
                            {
                                <span>Try adjusting your filter criteria.</span>
                            }
                            else
                            {
                                <span>There are no products in the system yet.</span>
                            }
                        </p>
                        @if (!string.IsNullOrEmpty(ViewBag.SearchTerm) || !string.IsNullOrEmpty(ViewBag.SelectedCategory) || !string.IsNullOrEmpty(ViewBag.SelectedStatus) || !string.IsNullOrEmpty(ViewBag.SelectedFarmer) || ViewBag.StartDate != null || ViewBag.EndDate != null)
                        {
                            <a href="@Url.Action("Products", "Employee")" class="btn btn-outline-secondary mt-3">
                                <i class="fa fa-times me-2"></i> Clear Filters
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Export to CSV functionality
            document.getElementById('exportBtn').addEventListener('click', function() {
                // Get table data
                const table = document.getElementById('productsTable');
                const rows = table.querySelectorAll('tr');

                let csvContent = "data:text/csv;charset=utf-8,";

                // Get headers
                const headers = [];
                const headerCells = rows[0].querySelectorAll('th');
                headerCells.forEach(cell => {
                    // Skip the Actions column
                    if (cell.textContent.trim() !== 'Actions') {
                        headers.push('"' + cell.textContent.trim() + '"');
                    }
                });
                csvContent += headers.join(',') + '\r\n';

                // Get rows
                for (let i = 1; i < rows.length; i++) {
                    const row = rows[i];
                    const cells = row.querySelectorAll('td');
                    const rowData = [];

                    cells.forEach((cell, index) => {
                        // Skip the Actions column
                        if (index < cells.length - 1) {
                            // Get text content, not HTML
                            let cellText = '';

                            // Special handling for badges and links
                            if (cell.querySelector('.badge')) {
                                cellText = cell.querySelector('.badge').textContent.trim();
                            } else if (cell.querySelector('a')) {
                                cellText = cell.querySelector('a').textContent.trim();
                            } else {
                                cellText = cell.textContent.trim();
                            }

                            // Escape quotes and wrap in quotes
                            cellText = '"' + cellText.replace(/"/g, '""') + '"';
                            rowData.push(cellText);
                        }
                    });

                    csvContent += rowData.join(',') + '\r\n';
                }

                // Create download link
                const encodedUri = encodeURI(csvContent);
                const link = document.createElement('a');
                link.setAttribute('href', encodedUri);
                link.setAttribute('download', 'all_products.csv');
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
        });
    </script>
}