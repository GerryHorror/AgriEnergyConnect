@model IEnumerable<AgriEnergyConnect.DTOs.FarmerSummaryDTO>

@{
    ViewData["Title"] = "Manage Farmers";
    Layout = "_EmployeeLayout";
}

<div class="dashboard-content">
    <!-- Page Header -->
    <div class="page-header">
        <div class="title-section">
            <h1>Manage Farmers</h1>
            <p>View and manage all farmers in the system</p>
        </div>
        <a asp-action="AddFarmer" class="btn btn-primary">
            <i class="fa fa-plus me-2"></i> Add New Farmer
        </a>
    </div>

    <!-- Search and Filter Section -->
    <div class="filter-section mb-4">
        <div class="card">
            <div class="card-body">
                <form method="get" asp-action="ManageFarmers" class="row g-3">
                    <div class="col-md-3">
                        <label for="searchTerm" class="form-label">Search Farmers</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fa fa-search"></i>
                            </span>
                            <input type="text" class="form-control" id="searchTerm" name="searchTerm"
                                   placeholder="Search by name or farm..." value="@ViewBag.SearchTerm">
                        </div>
                    </div>

                    <div class="col-md-3">
                        <label for="locationFilter" class="form-label">Location</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fa fa-map-marker-alt"></i>
                            </span>
                            <select class="form-select" id="locationFilter" name="locationFilter">
                                <option value="">All Locations</option>
                                @foreach (var location in ViewBag.UniqueLocations ?? new List<string>())
                                {
                                    <option value="@location" selected="@(ViewBag.SelectedLocation == location)">@location</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <label for="statusFilter" class="form-label">Status</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fa fa-filter"></i>
                            </span>
                            <select class="form-select" id="statusFilter" name="statusFilter">
                                <option value="">All Status</option>
                                <option value="active" selected="@(ViewBag.SelectedStatus == "active")">Active Only</option>
                                <option value="inactive" selected="@(ViewBag.SelectedStatus == "inactive")">Inactive Only</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fa fa-filter me-2"></i> Filter
                        </button>
                        <a href="@Url.Action("ManageFarmers")" class="btn btn-outline-secondary">
                            <i class="fa fa-times me-2"></i> Clear
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Farmers Table -->
    <div class="card">
        <div class="card-header bg-light">
            <h5 class="mb-0">All Farmers (@(Model.Count()) total)</h5>
        </div>
        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Farm</th>
                                <th>Owner</th>
                                <th>Location</th>
                                <th>Products</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var farmer in Model)
                            {
                                <tr class="@(!farmer.IsActive ? "table-secondary opacity-75" : "")">
                                    <td class="align-middle">
                                        <div class="d-flex align-items-center">
                                            <div class="farmer-avatar me-3"
                                                 style="background-color: @GetAvatarColor(farmer.FarmerId);
                                                        color: @GetAvatarTextColor(farmer.FarmerId);
                                                        border-color: @GetAvatarBorderColor(farmer.FarmerId);
                                                        opacity: @(!farmer.IsActive ? "0.5" : "1");">
                                                @GetInitials(farmer.OwnerName)
                                            </div>
                                            <div>
                                                <strong class="@(!farmer.IsActive ? "text-muted" : "")">@farmer.FarmName</strong>
                                                @if (!farmer.IsActive)
                                                {
                                                    <span class="badge bg-secondary ms-2 small">Inactive</span>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td class="align-middle @(!farmer.IsActive ? "text-muted" : "")">@farmer.OwnerName</td>
                                    <td class="align-middle">
                                        <span class="@(!farmer.IsActive ? "text-muted" : "")">
                                            <i class="fa fa-map-marker-alt me-1"></i>
                                            @farmer.Location
                                        </span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="badge bg-info">@farmer.ProductCount</span>
                                    </td>
                                    <td class="align-middle">
                                        @if (farmer.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td class="align-middle">
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("FarmerDetails", new { farmerId = farmer.FarmerId })"
                                               class="btn btn-sm btn-outline-primary" title="View Details">
                                                <i class="fa fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("ViewFarmerProducts", new { farmerId = farmer.FarmerId })"
                                               class="btn btn-sm btn-outline-success" title="View Products">
                                                <i class="fa fa-box"></i>
                                            </a>
                                            <a href="@Url.Action("EditFarmer", new { farmerId = farmer.FarmerId })"
                                               class="btn btn-sm btn-outline-warning" title="Edit">
                                                <i class="fa fa-edit"></i>
                                            </a>
                                            @if (farmer.IsActive)
                                            {
                                                <form asp-action="DeactivateFarmer" method="post" class="d-inline">
                                                    <input type="hidden" name="farmerId" value="@farmer.FarmerId" />
                                                    <button type="submit" class="btn btn-sm btn-outline-danger"
                                                            title="Deactivate"
                                                            onclick="return confirm('Are you sure you want to deactivate @farmer.OwnerName? This will disable their access to the system.')">
                                                        <i class="fa fa-ban"></i>
                                                    </button>
                                                </form>
                                            }
                                            else
                                            {
                                                <form asp-action="ReactivateFarmer" method="post" class="d-inline">
                                                    <input type="hidden" name="farmerId" value="@farmer.FarmerId" />
                                                    <button type="submit" class="btn btn-sm btn-outline-success"
                                                            title="Reactivate"
                                                            onclick="return confirm('Are you sure you want to reactivate @farmer.OwnerName? This will restore their access to the system.')">
                                                        <i class="fa fa-check-circle"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="empty-state">
                        <i class="fa fa-users fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No farmers found</h5>
                        <p class="text-muted">Start by adding a new farmer to the system.</p>
                        <a asp-action="AddFarmer" class="btn btn-primary mt-3">
                            <i class="fa fa-plus me-2"></i> Add New Farmer
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("ManageFarmers", new { page = ViewBag.CurrentPage - 1, searchTerm = ViewBag.SearchTerm, locationFilter = ViewBag.SelectedLocation, statusFilter = ViewBag.SelectedStatus })">
                        Previous
                    </a>
                </li>

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("ManageFarmers", new { page = i, searchTerm = ViewBag.SearchTerm, locationFilter = ViewBag.SelectedLocation, statusFilter = ViewBag.SelectedStatus })">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("ManageFarmers", new { page = ViewBag.CurrentPage + 1, searchTerm = ViewBag.SearchTerm, locationFilter = ViewBag.SelectedLocation, statusFilter = ViewBag.SelectedStatus })">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

<!-- Custom CSS -->
<style>
    .farmer-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid;
    }

    .table > tbody > tr:hover {
        background-color: rgba(0, 137, 123, 0.03);
    }

    .empty-state {
        padding: 2rem;
    }

    .btn-group .btn {
        margin: 0 2px;
    }

    .filter-section .card {
        border: 1px solid #e0e0e0;
    }

    /* Inactive farmer styling */
    .table-secondary.opacity-75 {
        opacity: 0.6;
    }

    .table > tbody > tr.table-secondary:hover {
        background-color: rgba(108, 117, 125, 0.1);
    }
</style>

@functions {
    private string GetAvatarColor(int farmerId)
    {
        var colors = new[] { "#E8F5E9", "#FFF3E0", "#E1F5FE", "#F3E5F5", "#FCE4EC", "#E3F2FD" };
        return colors[farmerId % colors.Length];
    }

    private string GetAvatarTextColor(int farmerId)
    {
        var colors = new[] { "#4CAF50", "#FF9800", "#29B6F6", "#9C27B0", "#E91E63", "#2196F3" };
        return colors[farmerId % colors.Length];
    }

    private string GetAvatarBorderColor(int farmerId)
    {
        var colors = new[] { "#4CAF50", "#FF9800", "#29B6F6", "#9C27B0", "#E91E63", "#2196F3" };
        return colors[farmerId % colors.Length];
    }

    private string GetInitials(string name)
    {
        if (string.IsNullOrEmpty(name)) return "??";

        var parts = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (parts.Length >= 2)
        {
            return $"{parts[0][0]}{parts[1][0]}".ToUpper();
        }
        else if (parts.Length == 1 && parts[0].Length > 0)
        {
            return parts[0].Substring(0, Math.Min(2, parts[0].Length)).ToUpper();
        }
        return "??";
    }
}